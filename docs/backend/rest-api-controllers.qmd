---
title: "REST API controllers"
categories: [Java, SpringBoot, Backend, REST, API]
author: Marc Palac√≠n Marfil
date: 2023/06/06
from: markdown+emoji
description: Implementing the REST API controllers
---

# Introduction

:::{.callout-warning}
## TODO: write an introduction to this entry
:::

## userRestController

```{.java filename="userRestController.java" include=../../tindergames/src/main/java/org/teamcifo/tindergames/userRestController/userRestController.java}
```

## BoardGameRestController

```{.java filename="BoardGameRestController.java" include=../../tindergames/src/main/java/org/teamcifo/tindergames/boardGameRestController/BoardGameRestController.java}
```

### Board Games End-Points

* GET `api/boardgames` - fetch all boardgames
* GET `api/boardgames/title/{gameTitle}` - fetch a board game by title
* GET `api/boardgames/id/{gameID}` - fetch by gameID
* POST `api/boardgames/createGame{BoardGame}`
* DELETE `api/boardgames/deleteGame{gameID}`
* PUT `api/boardgames/updateGame{BoardGame}`

### User  End-Points

* GET `user/users/` - fetch all users
* GET `user/users/userID/{userID}` - fetch user by userID
* GET `user/users/username/{username}` - fetch user by username
* POST `user/users/createUser{User}`
* PUT `user/users/updateUser{User}`
* DELETE `api/boardgames/deleteUser/{userID}`
* DELETE `api/boardgames/deleteFriend{userID}{friendID}` - deletes a friend from user's friend's list
* PUT `api/boardgames/addFriends{userID}{friendsIds}` - recieves a userID and a list of friendId's
* PUT `api/boardgames/addGameToCollection{userID}{gameID}`
* PUT `api/boardgames/deleteGameFromCollection{userID}{gameID}`
* POST `api/boardgames/login{username}{password}` 